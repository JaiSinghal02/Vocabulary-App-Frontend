{"version":3,"sources":["Components/UI/NavBar/NavBar.js","Components/Layout/Layout.js","Components/WordInfo/WordInfo.js","Components/UI/Modal/Modal.js","Components/UI/Cards/Card/Card.js","Components/UI/Cards/Cards.js","Components/UI/PopAlert/PopAlert.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","maxHeight","position","top","zIndex","menuButton","marginRight","spacing","title","flexGrow","display","paddingBottom","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","alignItems","justifyContent","cursor","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","closeButton","NavBar","props","classes","useState","isSearchBar","toggleSearchBar","searchBarWidth","setSearchBarWidth","searchBar","head","Typography","className","variant","noWrap","close","InputBase","autoFocus","input","inputProps","onChange","e","searchBarQuery","placeholder","onClick","prev","isNotSearching","AppBar","Toolbar","style","isSearching","Layout","Paper","elevation","id","Divider","light","Fab","size","aria-label","openModal","WordInfo","definition","examples","mapArray","obj","ind","map","exp","subsenseInfo","obj2","Fragment","content","data","obj1","obj3","modal","overflowY","paper1","background","paper","border","boxShadow","shadows","paper2","minHeight","infoHead","closeModalIcon","right","wordInfoHead","marginTop","marginBottom","fontSize","buttonProgress","Modaal","loading","setLoading","newWord","setNewWord","modalContent","addModal","modalHeight","modalWidth","TextField","label","target","value","defaultValue","InputLabelProps","shrink","autoComplete","Button","axios","post","then","res","closeModal","catch","err","message","disabled","CircularProgress","wordModal","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","minWidth","pos","flexDirection","wordInfo","textAlign","Cardd","info","lexicalEntries","entry","component","Card","openCard","CardContent","Cards","setInfoModalData","name","dictionaryData","i","length","toggleModal","state","showModal","setState","infoModalData","this","bind","cardContent","thickness","word","Component","SlideTransition","Slide","direction","PopAlert","Snackbar","TransitionComponent","bottom","autoHideDuration","disableWindowBlurListener","App","fetchDictionary","fetch","get","updateDictionary","showPopAlert","msg","reverse","text","queryText","RegExp","newData","match","push","searchBarTxt","popalert","defaults","baseURL","createMuiTheme","primary","main","typography","fontFamily","join","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.03d74eb8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxHeight: '56px',\r\n        position: 'fixed',\r\n        top: '0',\r\n        zIndex: '10',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        paddingBottom: '10px'\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0),\r\n        marginLeft: 0,\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0.2, 0),\r\n        height: '100%',\r\n        width: '6%',\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingBottom: '5px',\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '100%',\r\n        paddingBottom: '10px',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(5)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    closeButton:{\r\n        paddingBottom: '10px',\r\n        '&:hover':{\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function NavBar(props) {\r\n    const classes = useStyles();\r\n    const [isSearchBar, toggleSearchBar] = useState(false)\r\n    const [searchBarWidth, setSearchBarWidth] = useState('0')\r\n\r\n    \r\n    const showSearchBar = () => {\r\n        toggleSearchBar(prev => !prev)\r\n        setSearchBarWidth('100%')\r\n        props.isSearching()\r\n    }\r\n    const hideSearchBar = () => {\r\n        toggleSearchBar(prev => !prev)\r\n        setSearchBarWidth('0')\r\n        props.isNotSearching()\r\n    }\r\n    let searchBar = null;\r\n    let head = <div>\r\n        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Vocab\r\n        </Typography>\r\n\r\n        </div>\r\n    let close=null;\r\n    if (isSearchBar) {\r\n        searchBar = <InputBase\r\n            autoFocus={true}\r\n            classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n            }}\r\n            inputProps={{ 'aria-label': 'search' }}\r\n            onChange={(e)=>props.searchBarQuery(e)}\r\n            placeholder=\"Search\"\r\n        />\r\n        head = null\r\n        close=<CloseIcon onClick={hideSearchBar} className={classes.closeButton}/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" >\r\n                <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    {head}\r\n                    <div className={classes.search} style={{ width: searchBarWidth }}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon onClick={showSearchBar} style={{paddingBottom: '10px'}} />\r\n                        </div>\r\n                        {searchBar}\r\n                    </div>\r\n                    {close}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport './Layout.css'\r\nimport NavBar from '../UI/NavBar/NavBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport default function Layout(props){\r\n    return(\r\n        <>\r\n        <NavBar searchBarQuery={props.searchBarQuery} isSearching={props.isSearching} isNotSearching={props.isNotSearching}/>\r\n        <Paper elevation={0} id=\"layout-paper\">Word List</Paper>\r\n        <Divider id=\"layout-paper-divider\" light />\r\n        \r\n        <div className=\"layout-add-icon\" style={{zIndex:'500'}}>\r\n        <Fab size=\"small\" color=\"primary\" aria-label=\"add\" onClick={props.openModal}   >\r\n          <AddIcon />\r\n        </Fab>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport './WordInfo.css'\r\n\r\nexport default function WordInfo(props){\r\n    let definition=null,examples=null;\r\n  const mapArray = (obj,ind=0)=>{\r\n    if(obj[\"definitions\"]){\r\n      definition=<p className=\"word-info-modal-definition\">{obj[\"definitions\"]}</p>\r\n      if(obj[\"examples\"]){\r\n\r\n        examples=obj[\"examples\"].map((exp,id)=>{\r\n          return(\r\n              <li key={id}>{exp[\"text\"]}</li>\r\n          )\r\n        })\r\n      }\r\n    }\r\n    let subsenseInfo=null\r\n    if(obj[\"subsenses\"]){\r\n        subsenseInfo=obj[\"subsenses\"].map((obj2,ind)=>{\r\n          return(mapArray(obj2,ind))\r\n        })\r\n      }\r\n    return(\r\n      <React.Fragment key={ind}>\r\n      {definition}\r\n      <ul className=\"word-info-modal-example-list\">\r\n        {examples}\r\n      </ul>\r\n      {subsenseInfo}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n    let content=props.data[\"lexicalEntries\"].map((obj1,ind)=>{\r\n        return(\r\n          <React.Fragment key={ind+1000}> \r\n          {ind!==0?\r\n            <div style={{width: '100%', height: '3px',display: 'block'}}>\r\n            <Divider style={{display: 'flex'}} light />\r\n            </div>:null}\r\n          <p className={\"word-info-modal-word\"+(ind===0?\" word-info-modal-first-word\":\"\")}>{obj1[\"lexicalCategory\"][\"id\"]}</p>\r\n          \r\n          {obj1[\"entries\"].map((obj2,ind)=>{\r\n            return(\r\n              <React.Fragment key={ind+100}>\r\n              {obj2[\"etymologies\"]?<p className=\"word-info-modal-etymology\">{obj2[\"etymologies\"]}</p>:null}\r\n              <div>\r\n                {obj2[\"senses\"].map((obj3,ind)=>{\r\n                  return(\r\n                    <div key={ind+10}>\r\n                      {mapArray(obj3)}\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n              </React.Fragment>\r\n            )\r\n          })}\r\n          </React.Fragment>\r\n        )\r\n      })\r\n    return(\r\n        <>\r\n        {content}\r\n        </>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport WordInfo from '../../WordInfo/WordInfo'\r\nimport axios from 'axios'\r\nimport './Modal.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    overflowY: 'scroll'\r\n  },\r\n  paper1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 2, 0.5),\r\n  },\r\n  paper2: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 2, 0.5),\r\n    width: '100%',\r\n    minHeight: '5000px',\r\n    overflowY: 'auto'\r\n  },\r\n  infoHead:{\r\n    backgroundColor: 'white',\r\n    position: 'fixed',\r\n    width:'97%',\r\n    top: '0',\r\n    zIndex:'1',\r\n  },\r\n  closeModalIcon:{\r\n      position: 'fixed',\r\n      right: '25px',\r\n      '&:hover':{\r\n          cursor: 'pointer'\r\n      }\r\n  },\r\n  wordInfoHead:{\r\n      marginTop: '50px',\r\n      marginBottom: '0',\r\n      fontSize: '40px'\r\n  },\r\n  buttonProgress: {\r\n    color: \"primary\",\r\n    position: 'absolute',\r\n    marginTop: '14px',\r\n    marginRight: '19px',\r\n  },\r\n}));\r\n\r\nexport default function Modaal(props) {\r\n  const classes = useStyles();\r\n  const [loading,setLoading]=useState(false)\r\n  const [newWord,setNewWord]=useState(\"\")\r\n  let modalContent=null\r\nconst addButtonClick = ()=>{\r\n    setLoading(!loading)\r\n    \r\n    axios.post(`/dictionary/add/word/${newWord}`)\r\n    .then(res=>{\r\n      setLoading(!loading)\r\n      props.closeModal(newWord)\r\n    })\r\n    .catch(err=>{\r\n      setLoading(!loading)\r\n      props.closeModal(\"error\",err.message)\r\n    })\r\n}\r\n  \r\n  if(props.addModal){\r\n    modalContent=<div className={classes.paper1} style={{height: props.modalHeight,width: props.modalWidth}}>\r\n                    <h3 id=\"transition-modal-title\">Add to Dictionary</h3>\r\n                    <TextField autoFocus={true} id=\"standard-required\" label=\"New Word\" \r\n                    onChange={(e)=>setNewWord(e.target.value)}\r\n                    defaultValue=\"\" \r\n                    InputLabelProps={{shrink: true,}}\r\n                    autoComplete=\"off\"\r\n                    />\r\n                    <div className=\"add-modal-button\">\r\n                        <Button color=\"primary\" onClick={addButtonClick} disabled={loading}>Add</Button>\r\n                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                        <Button color=\"primary\" onClick={props.closeModal}>Cancel</Button>\r\n                    </div>\r\n                </div>\r\n    }\r\nelse if(props.wordModal){\r\n    modalContent=<div className={classes.paper2} >\r\n              <div className={classes.infoHead}>\r\n                <CloseIcon onClick={props.closeModal} className={classes.closeModalIcon} />\r\n            <h1 id=\"transition-modal-title\" className={classes.wordInfoHead}>{props.data[\"_id\"]}</h1>\r\n            <div style={{width: '100%', height: '3px',display: 'block'}}>\r\n            <Divider style={{display: 'flex'}} light />\r\n            </div>\r\n            </div>\r\n            <div style={{position: 'absolute',top: '110px',width: '97%'}}>\r\n\r\n            <div style={{width:'98%'}}>\r\n              <WordInfo data={props.data}/>\r\n            </div>\r\n            </div>\r\n</div>\r\n}\r\n\r\n\r\n  return (\r\n    <div style={{width:'100%',overflowY: 'auto'}}>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={props.openModal}\r\n        onClose={props.closeModal}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 600,\r\n        }}\r\n      >\r\n        <Fade in={props.openModal}>\r\n          {modalContent}\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 200,\r\n  },\r\n  title: {\r\n    fontSize: 10,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  content:{\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    fontSize: '20px'\r\n  },\r\n  wordInfo:{\r\n    width:'100%',\r\n    display: 'flex',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    textAlign: 'left',\r\n    fontSize: '15px'\r\n  }\r\n});\r\n\r\nexport default function Cardd(props) {\r\n  const classes = useStyles();\r\n  const info=props.data.lexicalEntries.map((entry,ind)=>{\r\n    return(\r\n      <Typography key={ind} variant=\"body2\" component=\"p\" className={classes.wordInfo}>\r\n          ({entry[\"lexicalCategory\"][\"id\"]}) {entry[\"entries\"]?entry[\"entries\"][0][\"senses\"][0][\"definitions\"]:\"\"}\r\n      </Typography>\r\n    )\r\n  })\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\" onClick={props.openCard(props.data[\"_id\"])}>\r\n      <CardContent className={classes.content}>\r\n        <Typography variant=\"h5\" component=\"h2\" >\r\n          {props.data[\"_id\"]}\r\n        </Typography>\r\n        {info}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React,{Component} from 'react'\r\nimport './Cards.css'\r\nimport Card from './Card/Card'\r\nimport Modal from '../Modal/Modal'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nclass Cards extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showModal:false,\r\n            infoModalData: null,\r\n        }\r\n    }\r\n    setInfoModalData=(name)=>{\r\n        const data=this.props.dictionaryData\r\n        let info;\r\n        for(let i=0;i<data.length;++i){\r\n            if(data[i][\"_id\"]===name){\r\n                info=data[i]\r\n                break\r\n            }\r\n        }\r\n        return info\r\n    }\r\n    toggleModal= (name)=>{\r\n        let prev=this.state.showModal;\r\n        const info=this.setInfoModalData(name)\r\n        this.setState({showModal:!prev,infoModalData:info})\r\n    }\r\n    render(){\r\n        let modal=null;\r\n        if(this.state.showModal){\r\n            modal=<Modal \r\n            openModal={this.state.showModal} \r\n            closeModal={this.toggleModal.bind(this)} \r\n            wordModal={true}\r\n            modalHeight=\"100%\"\r\n            modalWidth=\"100%\"\r\n            data={this.state.infoModalData}\r\n            />\r\n        }\r\n        let cardContent=<div style={{marginTop: '200px'}}><CircularProgress size={80} thickness={2.0}/> </div>\r\n        const data=this.props.dictionaryData\r\n        if(data){\r\n            \r\n            cardContent=data.map(word=>{\r\n                return(\r\n                    <Card key={word[\"_id\"]} openCard={(name)=>this.toggleModal.bind(this,name)} data={word}/>\r\n                )\r\n            })\r\n        }\r\n        \r\n        return(\r\n            <>\r\n            <div className=\"cards-container\">\r\n                {modal}\r\n            {cardContent}\r\n            \r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cards","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport './PopAlert.css'\r\n\r\nfunction SlideTransition(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nexport default function PopAlert(props) {\r\n  return (\r\n    <div >\r\n      <Snackbar\r\n        open={props.open}\r\n        TransitionComponent={SlideTransition}\r\n        onClose={props.close}\r\n        message={props.message}\r\n        style={{bottom:'-4px'}}\r\n        autoHideDuration={3000}\r\n        disableWindowBlurListener={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport Layout from './Components/Layout/Layout'\nimport Modal from './Components/UI/Modal/Modal'\nimport Cards from './Components/UI/Cards/Cards';\nimport PopAlert from './Components/UI/PopAlert/PopAlert'\nimport axios from 'axios'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dictionaryData: null,\n      data:null,\n      showModal: false,\n      searchBarTxt: '',\n      message:\"\",\n      showPopAlert: false\n    }\n  }\n  fetchDictionary = (fetch=false) => {\n    if (!this.state.dictionaryData || fetch) {\n      axios.get('/dictionary')\n        .then(res => {\n          this.updateDictionary(res.data,fetch)\n        })\n        .catch(err => {\n          this.setState({showPopAlert:true,message: err.message})\n        })\n    }\n  }\n  componentDidMount() {\n    this.fetchDictionary()\n\n  }\n  updateDictionary = (data,fetch=false) => {\n    let msg=\"\"\n    if(fetch){\n      msg=\"Queued successfully!\"\n    }\n    this.setState({ dictionaryData: data.reverse(), showPopAlert: fetch,data:data,message:msg })\n  }\n  toggleModal = (text=\"\",msg=\"\") => {\n    let err=\"\"\n    if(text===\"error\"){\n      err=msg\n    }\n    let prev = this.state.showModal;\n    this.setState({ showModal: !prev,message:err,showPopAlert: err!==\"\"})\n    if(typeof text==='string' && text!==\"error\"){\n      this.fetchDictionary(true)\n    }\n    \n  }\n  searchBarQuery = (e) => {\n    let queryText=e.target.value\n    let exp=new RegExp(queryText)\n    let data=this.state.dictionaryData\n    let newData=[]\n    for(let i=0;i<data.length;++i){\n      if(data[i][\"_id\"].match(exp)){\n        newData.push(data[i])\n      }\n    }\n    this.setState({ searchBarTxt: queryText,data:newData })\n  }\n  isSearching = () => {\n    this.setState({data:null })\n  }\n  isNotSearching = () => {\n    this.setState({data:this.state.dictionaryData })\n  }\n\n  render() {\n    let modal = null;\n    if (this.state.showModal) {\n      modal = <Modal openModal={this.state.showModal} closeModal={this.toggleModal.bind(this)} \n      addModal={true} />\n    }\n    let popalert=null;\n        if(this.state.showPopAlert){\n            popalert=<PopAlert open={this.state.showPopAlert} message={this.state.message} close={()=>this.setState({showPopAlert:false})} />\n        }\n    return (\n      <div className=\"App\">\n        {modal}\n        <header className=\"App-header\">\n          <Layout openModal={this.toggleModal.bind(this)}\n            searchBarQuery={this.searchBarQuery.bind(this)}\n            isSearching={this.isSearching.bind(this)}\n            isNotSearching={this.isNotSearching.bind(this)}\n          />\n          { this.state.data ? <Cards dictionaryData={this.state.data}/> : null}\n        </header>\n        {popalert}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios'\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\n\naxios.defaults.baseURL=\"https://vocabulary-server.herokuapp.com/\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#622449',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Kumbh Sans', 'sans-serif'\n    ].join(','),\n  },\n});\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}